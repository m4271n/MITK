<!--
State machine pattern for display interactions:
-Zooming
-Panning
-Scrolling through planes
-Adjusting the LevelWindow

For some interactions several transitions exists, which one is used can be determined by the configuration file.
If an event_variant is not declared in the configuration file it is disabled.

For example scrolling can be triggered by Key-, Wheel- or MouseMove events, where the latter needs an extra state for scrolling.
So they are triggered by different event_variants, to choose which one is used, describe the desired event_variant in a config file
and omit the others. See DisplayConfig___ for examples and also for parameters for the interaction behaviour.


TODO Std move to abort interaction of scroll/pan/zoom
-->
<statemachine>
    <state name="start" startstate="true" >
        <transition event_class="GestureEvent" event_variant="StartGestureMove" target="move">
          <condition name="check_gesture_event"/>
          <action name="init"/>
        </transition>
        <transition event_class="GestureEvent" event_variant="StartGestureTap" target="tap">
          <condition name="check_gesture_event"/>
          <action name="init"/>
        </transition>
    </state>
    <state name="move">
        <transition event_class="GestureEvent" event_variant="GestureMoving" target="move">
          <action name="move"/>
        </transition>
        <transition event_class="GestureEvent" event_variant="EndGestureMoving" target="start"/>
    </state>
    <state name="tap">
        <transition event_class="GestureEvent" event_variant="EndGestureTap" target="start"/>
    </state>
</statemachine>
